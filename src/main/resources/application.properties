spring.profiles.active=dev
#spring.profiles.active=prod

#spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/dan_food?createDatabaseIfNotExist=true&useSSL=false&useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC&allowPublicKeyRetrieval=true
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}

##JPA
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
#spring.jpa.generate-ddl=true
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true
#Criando migração a partir de DDL gerado por schema generation
spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=src/main/resources/ddl.sql

## Configuração do Flyway para definir os locais dos scripts de migrations e callbacks
spring.flyway.locations=classpath:db/migration,classpath:db/testdata

## Configurando o pool de conexões com Hikari
spring.datasource.hikari.maximum-pool-size=15
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=10000

## Configura a lib jackson para lançar exceção, quando uma propriedade que não existe for passada no json
spring.jackson.deserialization.fail-on-unknown-properties=true
## Configura a lib jackson para lançar exceção, quando uma propriedade está ignorada
spring.jackson.deserialization.fail-on-ignored-properties=true

## Ativação para lançar exceptions se não tiver um handler (método mapeado) para determinada url
spring.mvc.throw-exception-if-no-handler-found=true
## Desabilita o resource handler para os arquivos estáticos, não estamos desenvolvendo um API e não uma app web tradicional
spring.web.resources.add-mappings=false

##THYMELEAF
spring.thymeleaf.cache=false