spring.profiles.active=dev
#spring.profiles.active=prod
server.servlet.context-path=/api
#spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/dan_food?createDatabaseIfNotExist=true&useSSL=false&useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC&allowPublicKeyRetrieval=true
spring.datasource.username=danilo
spring.datasource.password=840327
##Gera DDL automaticamente. Deve ser usado apenas para desenvolvimento e debug
#spring.jpa.generate-ddl=true
##Cria as tabelas automaticamente. Deve ser usado apenas para desenvolvimento e debug
#spring.jpa.hibernate.ddl-auto=update
##Mostrar as instruÃÂ§ÃÂµes SQL no console. Deve ser usado apenas para desenvolvimento e debug
spring.jpa.show-sql=true
##Criando migraÃÂ§ÃÂµes a partir de DDL gerado por schema generation
spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=src/main/resources/ddl.sql
##Formata o visual das query no console, para facilitar a leitura
#spring.jpa.properties.hibernate.format_sql=true
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
##Desativa o Lazy Loading na aplicaÃÂ§ÃÂ£o
#spring.jpa.open-in-view=false
##ConfiguraÃÂ§ÃÂ£o do Flyway para definir os locais dos scripts de migrations e callbacks
spring.flyway.locations=classpath:db/migration,classpath:db/testdata
##Configurando o pool de conexÃÂ£o com Hikari
spring.datasource.hikari.maximum-pool-size=15
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=10000
##Configura a lib jackson para lanÃÂ§ar umar exceÃÂ§ÃÂ£o, quando uma propriedade que nÃÂ£o existe for passada no json
spring.jackson.deserialization.fail-on-unknown-properties=true
##Configura a lib jackson para lanÃÂ§ar uma exceÃÂ§ÃÂ£o, quando uma propriedade Ã¯Â¿Â½ ignorada
spring.jackson.deserialization.fail-on-ignored-properties=true
##Configura a lib jackson para ignorar propriedades vazias
spring.jackson.default-property-inclusion=non_empty
##Habilitar snake_case
#spring.jackson.property-naming-strategy=SNAKE_CASE
##AtivaÃÂ§ÃÂ£o para lanÃÂ§ar exceptions se nÃÂ£o tiver um handler para determinada url
spring.mvc.throw-exception-if-no-handler-found=true
##Desabilita o resource handler para os arquivos estÃÂ¡ticos, estamos desenvolvendo uma API e nÃÂ£o um aplicativo web tradicional
spring.web.resources.add-mappings=false
##Definindo a propriedade do storage para Local ou AWS S3
danfood.storage.tipo=s3
##Configurando a propriedade do storage local de fotos do produto
danfood.storage.local.diretorio-fotos=/home/danilo/Imagens/catalogo
##Configurando a propriedade do storage no S3 da AWS
#danfood.storage.s3.id-chave-acesso=
#danfood.storage.s3.chave-acesso-secreta=
danfood.storage.s3.bucket=danfood-test
danfood.storage.s3.regiao=us-east-2
danfood.storage.s3.diretorio-fotos=album
##ConfiguraÃÂ§ÃÂ£o o tamanho mÃÂ¡ximo do arquivo de upload
#spring.servlet.multipart.max-file-size=20KB
##ConfiguraÃÂ§ÃÂ£o o tamanho mÃÂ¡ximo da requisiÃÂ§ÃÂ£o
#spring.servlet.multipart.max-request-size=20MB
##ConfiguraÃÂ§ÃÂ£o do provedor para envio de e-mail SMTP
spring.mail.host=email-smtp.us-east-2.amazonaws.com
spring.mail.port=587
#spring.mail.username=
#spring.mail.password=
##ConfiguraÃÂ§ÃÂ£o do envio de e-mail
spring.freemarker.settings.locale="pt_BR"
danfood.email.impl=sandbox
danfood.email.remetente=DanFood <danrocha858585@gmail.com>
danfood.email.sandbox.destinatario=danrocha858585+sandbox@gmail.com
##Definindo o provedor de envio de sms
danfood.sms.impl=claro
##Definindo o tipo de serviÃÂ§o de notificaÃÂ§ÃÂ£o ao cliente
danfood.notificacao.cliente.tipo=sms
##NecessÃÂ¡ria para o funcionamento do SpringFox 3.0.0
spring.mvc.pathmatch.matching-strategy=ANT_PATH_MATCHER
##ConfiguraÃÂ§ÃÂ£o para comprimir os jsons na resposta http
server.compression.enabled=true
##Desabilitar o cache do Thymeleaf
spring.thymeleaf.cache=false
##Registrando o token do loggly
#logging.loggly.token=
#logging.level.org.springframework=DEBUG
##Configurando usuÃÂ¡rio e senha padrÃÂ£o
#spring.security.user.name=danfood
#spring.security.user.password=123456
##Configurando a chamada para validar o token de autenticaÃÂ§ÃÂ£o
spring.security.oauth2.resourceserver.opaquetoken.introspection-uri=http://auth.danfood.local:8081/oauth/check_token
spring.security.oauth2.resourceserver.opaquetoken.client-id=checktoken
spring.security.oauth2.resourceserver.opaquetoken.client-secret=checktoken123
##Configurando o token de autenticação assimétrica (chave pública/privada)
spring.security.oauth2.resourceserver.jwt.public-key-location=classpath:keys/danfood-pkey.pem